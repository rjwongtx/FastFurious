int startArea = _;
double rampX=_;
double rampY=_;
double soilX=_;
double soilY=_;


double x = 177.3;
double y = 187.5;

double currentX;
double currentY;
double solarX;
double solarY;
int solarArea;
double desiredX;
double desiredY;

int compass = 1; //1-North, 2-East, 3-South, 4-West

int objective1Complete=0;

void turnRight()
{
	<turn function>
	
		if(compass == 4)
		{
			compass=1;
		}

		else
		{
			compass++;
		}
}

void turnLeft()
{

	<turn function>

		if(compass==1)
		{
			compass=4;
		}

		else
		{
			compass--;
		}
}

if(startArea==1)
{
	currentX=_;
	currentY=_;
	solarX=_;
	solarY=_;
	solarArea=2;
}
else if(startArea==2)
{
	currentX=_;
	currentY=_;
	solarX=_;
	solarY=_;
	solarArea=4;
}
else if(startArea==3)
{
	currentX=_;
	currentY=_;
	solarX=_;
	solarY=_;
	solarArea=1;
}
else if(startArea==4)
{
	currentX=_;
	currentY=_;
	solarX=_;
	solarY=_;
	solarArea=3;
}
else
{
	System.out.println("No specified start area!");
	exit(0);
}

void move()
{


	if(compass==2 || compass==4)
	{
		xPing;
		<move function using x>

		if(compass==2)
		{
			currentX += 17.25;
		}
		else if(compass==4)
		{
			currentX -=17.25;
		}
		else 
		{
			System.out.println("How did we even get here? - X-axis editon error.");
			exit(0);
		}

	}

	else if(compass==1 || compass==3)
	{
		yPing
		<move function using y>

		if(compass==1)
		{
			currentY+=18.25;
		}
		else if(compass==3)
		{
			currentY-=18.25;
		}
		else 
		{
			System.out.println("How did we even get here? - Y-axis edition error.");
			exit(0);
		}
	}
	else
	{
		System.out.println("Something went wrong with the compass.");
		System.out.println("It currently reads: " + compass);
		exit(0);
	}

}

void movement()
{
<compare currentLocation y-axis with desiredLocation y-axis> // Y-axis check

if(currentY > (desiredY + 18.25))
{
	if(compass !=3)
	{
		<turnRight function>
	}
	else if(compass==3)
	{
		move;
	}
	else 
	{
		System.out.println("Error regarding currentLocation’s y-axis being higher than the desiredLocation’s y-axis.");
		exit(0);
	}
}
else if(currentY < (desiredY - 18.25))
{
	if(compass!=1)
	{
		<turnRight function>
	}
	else if(compass==1)
	{
		move;
	}
else 
	{
		System.out.println("Error regarding currentLocation’s y-axis being lower than the desiredLocation’s y-axis.");
		exit(0);
	}

}
	
else if(currentY < (desiredY + 18.25) && currentY > (desiredY - 18.25))
{
if(currentX > (desiredX + 17.25))
	{
		if(compass !=4)
		{
			<turnRight function>
		}
		else if(compass==4)
		{
			move;
		}
		else 
		{
			System.out.println("Error regarding currentLocation’s x-axis being higher than the desiredLocation’s x-axis.");
			exit(0);
		}
	}
	else if(currentX < (desiredX - 17.25))
	{
		if(compass!=2)
		{
			<turnRight function>
		}
		else if(compass==2)
		{
			move;
		}
else 
		{
			System.out.println("Error regarding currentLocation’s x-axis being lower than the desiredLocation’s x-axis.");
			exit(0);
		}
	}
	else
	{
		<currentLocation = desiredLocation>
		return;
	}
}
}

void xPing()
{
	<ping within 18 inches>

	if(ping < 18)
	{
		<wait 10 seconds & ping again>
	
		if(ping < 18)
		{
			evasiveFunction;
		}
		else 
		{continue;}
	}
	else 
	{continue;}
}

void yPing()
{
	<ping within 19 inches>

	if(ping < 19)
	{
		<wait 5 seconds & ping again>
	
		if(ping < 19)
		{
			evasiveFunction;
		}
		else 
		{continue;}
	}
	else 
	{continue;}
}


void evasiveFunction()
{
if(currentArea ==1 || currentArea ==3)
{
<turnRight function>

	if(compass==1 || compass==34)
	{ yPing; }
	else if(compass==2 || compass==4)
	{ xPing; }
	else 
	{
		System.out.println("error on compass for evasive function.");
		exit(0);
	}

move;
<turnLeft function>

	if(compass==1 || compass==3)
	{ yPing; }
	else if(compass==2 || compass==4)
	{ xPing; }
	else 
	{
		System.out.println("error on compass for evasive function.");
		exit(0);
	}
}

else if(currentArea ==2 || currentArea ==4)
{
<turnLeft function>

	if(compass==1 || compass==34)
	{ yPing; }
	else if(compass==2 || compass==4)
	{ xPing; }
	else 
	{
		System.out.println("error on compass for evasive function.");
		exit(0);
	}
move;
<turnRight function>

	if(compass==1 || compass==3)
	{ yPing; }
	else if(compass==2 || compass==4)
	{ xPing; }
	else 
	{
		System.out.println("error on compass for evasive function.");
		exit(0);
	}
}

else
{
	System.out.println("error on evasive function for currentArea.");
	exit(0);
}
}


void objective1()
{
if(objective1Complete==0)
{
desiredX=rampX;
desiredY=rampY;
movement;

<actions required to go up ramp and do all the stuff>
<move 2 times in a row to go up ramp>
<move 3 times to go down>

objective1Complete+=1;
switchArea;
}

else 
{
switchArea;
}
}

void objective2()
{
desiredX=solarX;
desiredY=solarY;
movement;
<rest for 5 seconds>

	if(solarArea==3)
	{
		objective3;
	}
	else if(solarArea==1)
	{
		objective1;
	}
	else
	{
		switchArea;
	}
}


void objective3()
{
desiredX=soilX;
desiredY=soilY;
movement;

<soil function>

System.out.println("We did it!");

exit(0);
}


void switchArea;()
{
if(currentArea==1)
{
desiredY=383.25;
desiredX=241.5;
movement;

currentArea=2;
}

else if(currentArea==2)
{
desiredY=292;
desiredX=310.5;
movement; 

currentArea=4;
}

else if(currentArea==3)
{
desiredY=292;
desiredX=241.5;
movement;

currentArea=1;
}

else if(currentArea==4)
{
desiredY=200.75;
desiredX=241.5;
movemen; 

currentArea=3;
}

else 
{
System.out.println("switchArea function isn’t working for some reason.");
exit(0);
}

}



